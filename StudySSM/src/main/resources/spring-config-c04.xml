<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="student" class="com.sajor.study.c01.Student">
    </bean>
    <bean id="school" class="com.sajor.study.c01.School">
        <property name="students" ref="student"/>
    </bean>

    <!-- 1.配置数据源 -->
    <bean id="dataSourceJDBC"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url"
                  value="jdbc:mysql://localhost:3306/TestDB?autoReconnect=true&amp;characterEncoding=utf8&amp;useUnicode=true&amp;useSSL=false"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
    </bean>

    <!-- 2.配置 JDBC 模板 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSourceJDBC"/>
    </bean>

    <!--3.定义使用 jdbc 模板的 jdbcTemplateUtil 类 -->
    <bean id="jdbcTemplateUtil" class="com.sajor.study.c04.JdbcTemplateUtil">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <!--4.JDBC 事务管理器，依赖于数据源-->
    <bean id="transactionManagerJDBC" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceJDBC"/>
    </bean>

    <!-- 5.编写通知:对事务进行增强(通知),需要编写对切入点和具体执行事务细节 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManagerJDBC">
        <tx:attributes>
            <!-- name:*表示任意方法名称 -->
            <tx:method name="*" propagation="REQUIRED" isolation="DEFAULT"
                       read-only="false"/>
        </tx:attributes>
    </tx:advice>

    <!-- 6.编写 aop，让 spring 自动对目标生成代理，需要使用 AspectJ 的表达式 -->
    <aop:config>
        <!-- 切入点 -->
        <aop:pointcut expression="execution(* com.sajor.study.c04.JdbcTemplateUtil.addUser(..))"
                      id="txPointCut"/>
        <!-- 切面:将切入点与通知整合 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
    </aop:config>

</beans>